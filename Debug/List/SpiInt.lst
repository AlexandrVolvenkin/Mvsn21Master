###############################################################################
#                                                                             #
#     IAR Assembler V7.10.1.1197/W32 for Atmel AVR 13/Apr/2022  19:28:05      #
#     Copyright 2017 IAR Systems AB.                                          #
#                                                                             #
#           Target option =  Relative jumps reach entire addr space           #
#           Source file   =  D:\Projects\CautoProjects\Mvsn21\Mvsn21\src\SpiInt.asm#
#           List file     =  D:\Projects\CautoProjects\Mvsn21\Mvsn21\Debug\List\SpiInt.lst#
#           Object file   =  D:\Projects\CautoProjects\Mvsn21\Mvsn21\Debug\Obj\SpiInt.r90#
#           Command line  =  -f C:\Users\ghost\AppData\Local\Temp\EW1D75.tmp  #
#                            (D:\Projects\CautoProjects\Mvsn21\Mvsn21\src\SpiInt.asm #
#                            -v1                                              #
#                            -OD:\Projects\CautoProjects\Mvsn21\Mvsn21\Debug\Obj #
#                            -s+ -w+ -r -M<>                                  #
#                            -LD:\Projects\CautoProjects\Mvsn21\Mvsn21\Debug\List #
#                            -t8 -u_enhancedCore -D__HAS_ENHANCED_CORE__=1    #
#                            -D__HAS_MUL__=1 -D__MEMORY_MODEL__=2             #
#                            -D__ATmega48__=1)                                #
#                                                                             #
###############################################################################

      1    00000000              
      2    00000000                  NAME SpiInterrupt
      3    00000000              #include <ioavr.h>
      4    00000000              
      5    00000000                  PUBLIC SpiInterrupt
      6    00000000              
      7    00000000                  RSEG   CODE
      8    00000000              
      9    00000000              SpiInterrupt:
     10    00000000              
     11    00000000              `?<Name CSpi 0>`  SYMBOL "CSpi"
     12    00000000              ??m_puiRxBuffer SYMBOL "m_puiRxBuffer",
                                  `?<Name CSpi 0>`
     13    00000000              ??m_puiTxBuffer SYMBOL "m_puiTxBuffer",
                                  `?<Name CSpi 0>`
     14    00000000              ??m_nuiBuffByteCounter SYMBOL "m_nuiBuffByteCo
                                 unter", `?<Name CSpi 0>`
     15    00000000              ??m_uiReceivedByteCounter SYMBOL "m_uiReceived
                                 ByteCounter", `?<Name CSpi 0>`
     16    00000000              ??m_uiExchangeByte       SYMBOL "m_uiExchangeB
                                 yte", `?<Name CSpi 0>`
     17    00000000              ??m_bfByteIsReceived       SYMBOL "m_bfByteIsR
                                 eceived", `?<Name CSpi 0>`
     18    00000000              ??m_bfRxBuffOverflow       SYMBOL "m_bfRxBuffO
                                 verflow", `?<Name CSpi 0>`
     19    00000000              SIG_SPI_STC         SYMBOL "SIG_SPI_STC"
     20    00000000              `??SIG_SPI_STC::??INTVEC 68` SYMBOL "??INTVEC
                                  68", SIG_SPI_STC
     21    00000000              
     22    00000000                      EXTERN ??m_puiRxBuffer
     23    00000000                      EXTERN ??m_puiTxBuffer
     24    00000000                      EXTERN ??m_nuiBuffByteCounter
     25    00000000                      EXTERN ??m_uiReceivedByteCounter
     26    00000000                      EXTERN ??m_uiExchangeByte
     27    00000000                      EXTERN ??m_bfByteIsReceived
     28    00000000                      EXTERN ??m_bfRxBuffOverflow
     29    00000000              
     30    00000000 930F                 PUSH R16
     31    00000002 9100....             LDS     R16, ??m_uiExchangeByte
     32    00000006 BD0E                 OUT     0x2E, R16
     33    00000008 910F                 POP R16
     34    0000000A              
     35    0000000A 93FA                 ST      -Y, R31
     36    0000000C 93EA                 ST      -Y, R30
     37    0000000E 934A                 ST      -Y, R20
     38    00000010 933A                 ST      -Y, R19
     39    00000012 932A                 ST      -Y, R18
     40    00000014 931A                 ST      -Y, R17
     41    00000016 930A                 ST      -Y, R16
     42    00000018 B74F                 IN      R20, 0x3F
     43    0000001A              ;        LDS     R16, ??m_uiExchangeByte
     44    0000001A              ;        OUT     0x2E, R16
     45    0000001A B50E                 IN      R16, 0x2E
     46    0000001C 9120....             LDS     R18, ??m_nuiBuffByteCounter
     47    00000020 9130....             LDS     R19, (??m_nuiBuffByteCounter +
                                                       1)
     48    00000024 91E0....             LDS     R30, ??m_puiRxBuffer
     49    00000028 91F0....             LDS     R31, (??m_puiRxBuffer +
                                                       1)
     50    0000002C 0FE2                 ADD     R30, R18
     51    0000002E 1FF3                 ADC     R31, R19
     52    00000030 8300                 ST      Z, R16
     53    00000032 9100....             LDS     R16, ??m_nuiBuffByteCounter
     54    00000036 9110....             LDS     R17, (??m_nuiBuffByteCounter +
                                                       1)
     55    0000003A 91E0....             LDS     R30, ??m_puiTxBuffer
     56    0000003E 91F0....             LDS     R31, (??m_puiTxBuffer +
                                                       1)
     57    00000042 0FE0                 ADD     R30, R16
     58    00000044 1FF1                 ADC     R31, R17
     59    00000046 8101                 LDD     R16, Z+1
     60    00000048 9300....             STS     ??m_uiExchangeByte, R16
     61    0000004C 9100....             LDS     R16, ??m_nuiBuffByteCounter
     62    00000050 9110....             LDS     R17, (??m_nuiBuffByteCounter +
                                                       1)
     63    00000054 3400                 CPI     R16, 64
     64    00000056 E020                 LDI     R18, 0
     65    00000058 0712                 CPC     R17, R18
     66    0000005A F460                 BRCC    ??SIG_SPI_STC_1
     67    0000005C ....                 LDI     R30, LOW(??m_nuiBuffByteCounte
                                                      r)
     68    0000005E ....                 LDI     R31, (??m_nuiBuffByteCounter)
                                                       >> 8
     69    00000060 8100                 LD      R16, Z
     70    00000062 8111                 LDD     R17, Z+1
     71    00000064 5F0F                 SUBI    R16, 255
     72    00000066 4F1F                 SBCI    R17, 255
     73    00000068 8300                 ST      Z, R16
     74    0000006A 8311                 STD     Z+1, R17
     75    0000006C E001                 LDI     R16, 1
     76    0000006E 9300....             STS     ??m_bfByteIsReceived,
                                                                        R16
     77    00000072 C006                 RJMP    ??SIG_SPI_STC_2
     78    00000074              ??SIG_SPI_STC_1:
     79    00000074 E001                 LDI     R16, 1
     80    00000076 9300....             STS     ??m_bfRxBuffOverflow,
                                                                        R16
     81    0000007A E001                 LDI     R16, 1
     82    0000007C 9300....             STS     ??m_bfByteIsReceived,
                                                                        R16
     83    00000080              ??SIG_SPI_STC_2:
     84    00000080 BF4F                 OUT     0x3F, R20
     85    00000082 9109                 LD      R16, Y+
     86    00000084 9119                 LD      R17, Y+
     87    00000086 9129                 LD      R18, Y+
     88    00000088 9139                 LD      R19, Y+
     89    0000008A 9149                 LD      R20, Y+
     90    0000008C 91E9                 LD      R30, Y+
     91    0000008E 91F9                 LD      R31, Y+
     92    00000090 9518                 RETI
     93    00000092              
     94    00000092              
     95    00000000              COMMON INTVEC(1)            ; Code in
                                  interrupt vector segment
     96    00000000              
     97    00000022              ORG SPI_STC_vect               ; Place code at
                                                                 interrupt
                                                                 vector
     98    00000022 ........         JMP   SpiInterrupt           ; Jump to
                                                                   assembler
                                                                   interrupt
                                                                   function
     99    00000026              
    100    00000026              ENDMOD
##############################
#          CRC:C23A          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 150         #
##############################



##############################
#          CRC:C23A          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 150         #
##############################



